[{"C:\\Users\\gizem\\OneDrive\\Skrivebord\\react-authentication\\front-end\\src\\index.js":"1","C:\\Users\\gizem\\OneDrive\\Skrivebord\\react-authentication\\front-end\\src\\reportWebVitals.js":"2","C:\\Users\\gizem\\OneDrive\\Skrivebord\\react-authentication\\front-end\\src\\App.js":"3","C:\\Users\\gizem\\OneDrive\\Skrivebord\\react-authentication\\front-end\\src\\Routes.js":"4","C:\\Users\\gizem\\OneDrive\\Skrivebord\\react-authentication\\front-end\\src\\pages\\UserInfoPage.js":"5","C:\\Users\\gizem\\OneDrive\\Skrivebord\\react-authentication\\front-end\\src\\pages\\LogInPage.js":"6","C:\\Users\\gizem\\OneDrive\\Skrivebord\\react-authentication\\front-end\\src\\pages\\SignUpPage.js":"7","C:\\Users\\gizem\\OneDrive\\Skrivebord\\react-authentication\\front-end\\src\\auth\\PrivateRoute.js":"8","C:\\Users\\gizem\\OneDrive\\Skrivebord\\react-authentication\\front-end\\src\\auth\\useToken.js":"9","C:\\Users\\gizem\\OneDrive\\Skrivebord\\react-authentication\\front-end\\src\\auth\\useUser.js":"10"},{"size":504,"mtime":1659174325497,"results":"11","hashOfConfig":"12"},{"size":362,"mtime":1659174325435,"results":"13","hashOfConfig":"12"},{"size":164,"mtime":1659174325585,"results":"14","hashOfConfig":"12"},{"size":699,"mtime":1659176715283,"results":"15","hashOfConfig":"12"},{"size":3120,"mtime":1659174325673,"results":"16","hashOfConfig":"12"},{"size":1661,"mtime":1659190430388,"results":"17","hashOfConfig":"12"},{"size":1905,"mtime":1659190068784,"results":"18","hashOfConfig":"12"},{"size":240,"mtime":1659190101487,"results":"19","hashOfConfig":"12"},{"size":335,"mtime":1659174321314,"results":"20","hashOfConfig":"12"},{"size":613,"mtime":1659174321344,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"1dgo16w",{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"31","messages":"32","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"24"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"36","messages":"37","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\gizem\\OneDrive\\Skrivebord\\react-authentication\\front-end\\src\\index.js",[],["44","45"],"C:\\Users\\gizem\\OneDrive\\Skrivebord\\react-authentication\\front-end\\src\\reportWebVitals.js",[],"C:\\Users\\gizem\\OneDrive\\Skrivebord\\react-authentication\\front-end\\src\\App.js",[],"C:\\Users\\gizem\\OneDrive\\Skrivebord\\react-authentication\\front-end\\src\\Routes.js",[],"C:\\Users\\gizem\\OneDrive\\Skrivebord\\react-authentication\\front-end\\src\\pages\\UserInfoPage.js",["46"],"import { useState, useEffect } from 'react';\nimport { useHistory } from 'react-router-dom';\n\nexport const UserInfoPage = () => {\n    // We'll use the history to navigate the user\n    // programmatically later on (we're not using it yet)\n    const history = useHistory();\n\n    // These states are bound to the values of the text inputs\n    // on the page (see JSX below). \n    const [favoriteFood, setFavoriteFood] = useState('');\n    const [hairColor, setHairColor] = useState('');\n    const [bio, setBio] = useState('');\n\n    // These state variables control whether or not we show\n    // the success and error message sections after making\n    // a network request (see JSX below).\n    const [showSuccessMessage, setShowSuccessMessage] = useState(false);\n    const [showErrorMessage, setShowErrorMessage] = useState(false);\n\n    // This useEffect hook automatically hides the\n    // success and error messages after 3 seconds when they're shown.\n    // Just a little user interface improvement.\n    useEffect(() => {\n        if (showSuccessMessage || showErrorMessage) {\n            setTimeout(() => {\n                setShowSuccessMessage(false);\n                setShowErrorMessage(false);\n            }, 3000);\n        }\n    }, [showSuccessMessage, showErrorMessage]);\n\n    const saveChanges = async () => {\n        // Send a request to the server to\n        // update the user's info with any changes we've\n        // made to the text input values\n        alert('Save functionality not implemented yet');\n    }\n\n    const logOut = () => {\n        // We'll want to log the user out here\n        // and send them to the \"login page\"\n        alert('Log out functionality not implemented yet');\n    }\n    \n    const resetValues = () => {\n        // Reset the text input values to\n        // their starting values (the data we loaded from the server)\n        alert('Reset functionality not implemented yet');\n    }\n    \n    // And here we have the JSX for our component. It's pretty straightforward\n    return (\n        <div className=\"content-container\">\n            <h1>Info for ______</h1>\n            {showSuccessMessage && <div className=\"success\">Successfully saved user data!</div>}\n            {showErrorMessage && <div className=\"fail\">Uh oh... something went wrong and we couldn't save changes</div>}\n            <label>\n                Favorite Food:\n                <input\n                    onChange={e => setFavoriteFood(e.target.value)}\n                    value={favoriteFood} />\n            </label>\n            <label>\n                Hair Color:\n                <input\n                    onChange={e => setHairColor(e.target.value)}\n                    value={hairColor} />\n            </label>\n            <label>\n                Bio:\n                <input\n                    onChange={e => setBio(e.target.value)}\n                    value={bio} />\n            </label>\n            <hr />\n            <button onClick={saveChanges}>Save Changes</button>\n            <button onClick={resetValues}>Reset Values</button>\n            <button onClick={logOut}>Log Out</button>\n        </div>\n    );\n}","C:\\Users\\gizem\\OneDrive\\Skrivebord\\react-authentication\\front-end\\src\\pages\\LogInPage.js",["47","48"],"C:\\Users\\gizem\\OneDrive\\Skrivebord\\react-authentication\\front-end\\src\\pages\\SignUpPage.js",["49","50"],"C:\\Users\\gizem\\OneDrive\\Skrivebord\\react-authentication\\front-end\\src\\auth\\PrivateRoute.js",[],"C:\\Users\\gizem\\OneDrive\\Skrivebord\\react-authentication\\front-end\\src\\auth\\useToken.js",[],"C:\\Users\\gizem\\OneDrive\\Skrivebord\\react-authentication\\front-end\\src\\auth\\useUser.js",[],{"ruleId":"51","replacedBy":"52"},{"ruleId":"53","replacedBy":"54"},{"ruleId":"55","severity":1,"message":"56","line":7,"column":11,"nodeType":"57","messageId":"58","endLine":7,"endColumn":18},{"ruleId":"55","severity":1,"message":"59","line":7,"column":12,"nodeType":"57","messageId":"58","endLine":7,"endColumn":17},{"ruleId":"55","severity":1,"message":"60","line":9,"column":26,"nodeType":"57","messageId":"58","endLine":9,"endColumn":41},{"ruleId":"55","severity":1,"message":"59","line":8,"column":12,"nodeType":"57","messageId":"58","endLine":8,"endColumn":17},{"ruleId":"55","severity":1,"message":"60","line":9,"column":26,"nodeType":"57","messageId":"58","endLine":9,"endColumn":41},"no-native-reassign",["61"],"no-negated-in-lhs",["62"],"no-unused-vars","'history' is assigned a value but never used.","Identifier","unusedVar","'token' is assigned a value but never used.","'setErrorMessage' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]